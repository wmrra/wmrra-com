name: Deploy to Staging

on:
  pull_request_target:
    types: [labeled]
jobs:
  # deploy to staging
  deploy:
    name: "Deploy PR to Staging"
    if: ${{ contains(github.event.pull_request.labels.*.name, 'stage') }}
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true  # Fetch Hugo themes (true OR recursive)
          fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'
          extended: true

      - name: Build
        run: hugo --minify

      - name: Deploy to Firebase
        shell: bash
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        id: firebase-deploy
        run:  |
              if [ -z "${FIREBASE_TOKEN}" ]; then
                echo "FIREBASE_TOKEN is unset."
              fi

              PR_NUMBER=$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')
              CHANNEL_ID="staging-${PR_NUMBER}"

              echo "PR: ${PR_NUMBER}"

              # npx firebase-tools deploy --token $FIREBASE_TOKEN  --project wmrra-prod
              hugo --config config.staging.yml
              npx firebase-tools hosting:channel:deploy $CHANNEL_ID --token $FIREBASE_TOKEN --project wmrra-prod
              echo "::set-output name=STAGING_URL::$(npx firebase-tools hosting:channel:list --token $FIREBASE_TOKEN --project wmrra-prod | grep $CHANNEL_ID | sed 's/â”‚/|/g')\n"
      - name: "Comment that PR is staged"
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Staged:\n\n| Channel ID | Last Release Time | URL | Expire Time |\n|----|----|----|----|\n${{ steps.firebase-deploy.outputs.STAGING_URL }}'
            })
      - name: "Remove stage label"
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.removeLabel({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'stage'
            })